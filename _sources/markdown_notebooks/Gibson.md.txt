# Gibson Assembly in pydna
> Visit the full library documentation [here](https://pydna-group.github.io/pydna/)

Gibson Assembly is a powerful method to assemble multiple DNA fragments into a single, continuous sequence in a seamless, one-step reaction. Developed by Daniel Gibson and colleagues in 2009, this method has been widely applied to work in molecular cloning, biotechnology, and synthetic biology.  

`pydna` provides the `gibson_assembly` function to simulate the assembly of DNA sequences. Below is an example for performing Gibson Assembly with pre-existing DNA fragments, followed by primer design for generating these fragments via the `pcr` method, if needed.


<a target="_blank" href="https://colab.research.google.com/github/pydna-group/pydna/blob/master/docs/notebooks/Gibson.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>


```python
%%capture
# Install pydna (only when running on Colab)
import sys
if 'google.colab' in sys.modules:
    %pip install pydna[clipboard,download,express,gel]

```


```python
from pydna.dseqrecord import Dseqrecord
from pydna.assembly2 import gibson_assembly
from pydna.common_sub_strings import terminal_overlap

#Creating example Dseqrecord sequences
fragment1 = Dseqrecord("acgatgctatactgCCCCCtgtgctgtgctcta")
fragment2 = Dseqrecord("tgtgctgtgctctaTTTTTtattctggctgtatc")
fragment3 = Dseqrecord("tattctggctgtatcGGGGGtacgatgctatactg")

#Creating a list of sequences to assemble
fragments = [fragment1, fragment2, fragment3]

#Performing Gibson assembly, with a minimum shared homology of 14bp
products = gibson_assembly(fragments, limit=14)

#Displaying the assembled product
print(products[0].seq)
```

    acgatgctatactgCCCCCtgtgctgtgctctaTTTTTtattctggctgtatcGGGGGt


Please refer to the Example_Gibson page for an example of a completed workflow for primer design and modelling Gibson Assembly using pydna. 
